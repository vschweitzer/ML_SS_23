# -*- coding: utf-8 -*-
"""spam data

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1iw9mzaqbhi6k35W0XN24mfa07rtFNg5t

Loading the data, fixing the formatting of the data and adding headers and converting the text file into a dataframe.
"""

import pandas as pd
import sys
import numpy as np
import seaborn as sns
import matplotlib.pyplot as plt

file = open("/content/sample_data/spambase.data", "r")

file_data=file.read()
file.close()

if sys.version_info[0] < 3: 
    from StringIO import StringIO
else:
    from io import StringIO

TESTDATA = StringIO(file_data)
df = pd.read_csv(TESTDATA,header=0,index_col=False)

"""Data Exploration"""

df.describe()

"""Correlation matrix gives us an idea of how all the variables are related to each other from 1 being most related to -1 being least related"""

corr_matrix = df.corr()
corr_matrix['spam']

"""As we have 57 features the most related and most unrelated 2 features are derived here."""

print('Few of the most corelated columns based on the matrix above is')
print('word_freq_your = 0.383234')
print('word_freq_remove = .332117')
print('word_freq_000 = 0.334787')
print('char_freq_$ = 0.323629')

print('most non corelated colmsn based on the matrix above is')
print('word_freq_hp = -0.256723')
print('word_freq_hpl = -0.232968')
print('word_freq_george = -0.183404')

sns.set(style="ticks", color_codes=True)    
g = sns.pairplot(df)
plt.show()

sns.heatmap(corr_matrix, cmap="coolwarm", annot=True)
plt.show()

corr_matrix = df.corr()

plt.figure(figsize=(14,14))
sns.heatmap(corr_matrix, cmap="coolwarm", annot=True, fmt=".2f",xticklabels=False, yticklabels=False)
plt.show()

# threshold = 0.5
# corr_matrix_filtered = corr_matrix.where(np.triu(np.ones(corr_matrix.shape), k=1).astype(np.bool))
# corr_matrix_filtered = corr_matrix_filtered[corr_matrix_filtered.abs() > threshold]

# sns.heatmap(corr_matrix_filtered, cmap="coolwarm", annot=True, fmt=".2f")

import plotly.express as px
corr_matrix = df.corr()

# Reshape correlation matrix to a long-form dataframe
corr_df = pd.melt(corr_matrix.reset_index(), id_vars='index')

# Create interactive heatmap using plotly
fig = px.imshow(corr_matrix,
                labels=dict(x="Features", y="Features", color="Correlation"),
                x=corr_matrix.columns,
                y=corr_matrix.columns,
                color_continuous_scale='RdBu_r',
                zmin=-1,
                zmax=1)
fig.update_layout(width=800, height=800)
fig.show()

# columns=df.keys()
# for i in columns:
#   sns.histplot(data=df, x=i, hue="spam", kde=True)
#   plt.show()

# for i in columns:
#   sns.boxplot(x="spam", y=i, data=df)
#   plt.show()

from sklearn.ensemble import RandomForestClassifier
rf = RandomForestClassifier()

X = df.drop("spam", axis=1)
y = df["spam"]

rf.fit(X, y)

importances = rf.feature_importances_
importances

feat_importances = pd.Series(importances, index=X.columns)
plt.figure(figsize=(12, 12))
feat_importances.nlargest(57).plot(kind='barh')
plt.show()


  
# changing the size of figure to 2X2

